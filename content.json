{"pages":[{"title":"","text":"404","link":"/404.html"}],"posts":[{"title":"使用Docsify做文档网站的详细配置教程","text":"没错，它叫Docsify。xhemj的文档中心就是用这个写的 开源地址：https://github.com/docsifyjs/docsify/官方Demo：https://docsify.js.org/ 目录 官方说明 安装 如何写文章 个性化 插件 结尾官方说明12345DocsifyA magical documentation site generator.Simple and lightweight (~21kB gzipped)No statically built html filesMultiple themes Docsify一个神奇的文档站点生成器。简单轻巧（~21kB）没有生成静态的html文件主题丰富安装本地搭建如果你想在本地搭建：npm安装：1npm i docsify-cli -g 初始化：1docsify init ./docs 本地预览：1docsify serve docs 进入http://localhost:3000就能看到效果咯！托管在网上如果你想在托管在网上：新建一个index.html内容为：123456789101112131415161718&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\"&gt; &lt;meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"&gt; &lt;meta charset=\"UTF-8\"&gt; &lt;link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/docsify/themes/vue.css\"&gt;&lt;/head&gt;&lt;body&gt; &lt;div id=\"app\"&gt;&lt;/div&gt; &lt;script&gt; window.$docsify = { //... } &lt;/script&gt; &lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; CDN的选择CDN可以选择：123&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\"&gt;&lt;/script&gt;&lt;script src=\"//cdnjs.cloudflare.com/ajax/libs/docsify/4.11.2/docsify.min.js\"&gt;&lt;/script&gt;&lt;script src=\"//unpkg.com/docsify/lib/docsify.min.js\"&gt;&lt;/script&gt; 这样就可以看到一个最基本的网页啦！如何写文章只需用Markdown语法写好一个.md的文章放在根目录或子目录后就会自动识别了。我自己测试好像用html的也可以，直接把后缀名改成.md，但效果可能不太好。文章链接对应：123/README.md =&gt; domain.com/#//hello.md =&gt; domain.com/#/hello/hello/hi.md =&gt; domain.com/#/hello/hi 如本教程文章Markdown文件为：https://gitee.com/xhemj/books/raw/master/p/How-to-Use-Docsify.md渲染成：https://xhemj.gitee.io/books/#/p/How-to-Use-Docsify个性化自定义加载文字只需在index.html中新增：1&lt;div id=\"app\"&gt;Please wait...&lt;/div&gt; 自定义侧边栏只需在index.html中新增：12345&lt;script&gt; window.$docsify = { loadSidebar: true }&lt;/script&gt; 后创建一个文件叫做_sidebar.md，将你的文件输入进去： 12* [Home](/)* [Guide](guide.md) _sidebar.md的加载逻辑是从每层目录下获取文件，如果当前目录不存在该文件则回退到上一级目录。例如当前路径为/zh-cn/more-pages则从/zh-cn/_sidebar.md获取文件，如果不存在则从/_sidebar.md获取。 !&gt; 注意，如果是托管在网上，请在文件根目录新增名叫.nojekyll的空文件。 为了更好地SEO，您可以在每个文件后面自定义标题： 12* [Home](/)* [Guide](guide.md \"The greatest guide in the world\") 默认情况下会自动根据文章标题生成目录，如果不想要，可以再index.html中新增： 123456&lt;script&gt; window.$docsify = { loadSidebar: true, subMaxLevel: 2 }&lt;/script&gt; subMaxLevel: 2表示只显示h1~h2的标题，对应#和##。如果你想忽略某个标题，则可以在文章中新增{docsify-ignore}： 12# Getting Started## Header {docsify-ignore} 如果想忽略全部的标题，则可以新增{docsify-ignore-all}： 12# Getting Started {docsify-ignore-all}## Header 表示忽略{docsify-ignore-all}下的全部标题 !&gt; {docsify-ignore-all}和{docsify-ignore}在正文中都不会显示 自定义导航栏写法一：在index.html中新增： 1234567&lt;body&gt; &lt;nav&gt; &lt;a href=\"#/\"&gt;EN&lt;/a&gt; &lt;a href=\"#/zh-cn/\"&gt;中文&lt;/a&gt; &lt;/nav&gt; &lt;div id=\"app\"&gt;&lt;/div&gt;&lt;/body&gt; !&gt; 所有路径都必须用#/来书写 写法二：在根目录新增_navbar.md文件：写法同_sidebar.md 12* [En](/)* [chinese](/zh-cn/) 你也可以按照如下来写多级导航栏： 123456789101112* Getting started * [Quick start](quickstart.md) * [Writing more pages](more-pages.md) * [Custom navbar](custom-navbar.md) * [Cover page](cover.md)* Configuration * [Configuration](configuration.md) * [Themes](themes.md) * [Using plugins](plugins.md) * [Markdown configuration](markdown.md) * [Language highlight](language-highlight.md) _navbar.md的加载逻辑是从每层目录下获取文件，如果当前目录不存在该文件则回退到上一级目录。例如当前路径为/zh-cn/more-pages则从/zh-cn/_navbar.md获取文件，如果不存在则从_navbar.md获取。 封面设置： 123window.$docsify = { coverpage: true,} 后再根目录创建_coverpage.md输入内容就可以显示在封面了效果见https://xhemj.gitee.io/books/ 主题颜色设置： 123window.$docsify = { themeColor: '#c30aff',} #c30aff就是主题的颜色了 外链打开方式设置： 123window.$docsify = { externalLinkTarget: '_blank',} _blank表示在新标签页中打开 插件表情插件先在在index.html中新增： 1&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/emoji.min.js\"&gt;&lt;/script&gt; !&gt; 我自己测试是我上面推荐的三个CDN都可以使用 即可输入:100: =&gt; :100: 搜索插件新增index.html： 1234567891011121314151617181920212223242526272829303132333435363738394041&lt;script&gt; window.$docsify = { search: 'auto', search : [ '/', // =&gt; /README.md '/guide', // =&gt; /guide.md '/get-started', // =&gt; /get-started.md '/zh-cn/', // =&gt; /zh-cn/README.md ], search: { maxAge: 86400000, paths: [], placeholder: 'Type to search', placeholder: { '/zh-cn/': '搜索', '/': 'Type to search' }, noData: 'No Results!', noData: { '/zh-cn/': '找不到结果', '/': 'No Results' }, depth: 2, hideOtherSidebarContent: false, namespace: 'website-1', } }&lt;/script&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/search.min.js\"&gt;&lt;/script&gt; 那我们来解释一下：1.指定搜索路径search: 'auto',表示是否搜索，默认是auto或： 123456search : [ '/', // =&gt; /README.md '/guide', // =&gt; /guide.md '/get-started', // =&gt; /get-started.md '/zh-cn/', // =&gt; /zh-cn/README.md ], 如：/就表示README.mdguide表示/guide.md设置后就表示只搜索这几个目录2.maxAge: 86400000,到期时间（官方这么说），不用改动3.paths: [], 可以设置搜索的目录，或设置auto或/，貌似和search:[]一样？4.搜索框的提示placeholder: 'Type to search',或： 1234placeholder: { '/zh-cn/': '搜索', '/': 'Type to search' }, 这样可以设置中英文目录的搜索框的提示noData: 'No Results!',表示无结果时显示的文字或： 1234noData: { '/zh-cn/': '找不到结果', '/': 'No Results' }, 分别设置中英文5.标题深度depth: 2,（官方这么解释）可以设置为1-66.隐藏其他侧边栏内容hideOtherSidebarContent: false,（官方这么解释）默认为false7.避免搜索索引冲突namespace: 'website-1',可以自己设置同一域下的多个网站之间可以设置名称避免搜索索引冲突其实有很多参数都不用设置比如我的配置是： 12345678search: 'auto',search: {maxAge: 86400000,paths: '/',placeholder: '搜索...',noData: '未找到结果，换个搜索词试试？',namespace: 'XhemjBlog', }, Google Analytics就是谷歌统计直接新增： 123456&lt;script&gt; window.$docsify = { ga: 'UA-XXXXX-Y' }&lt;/script&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/ga.min.js\"&gt;&lt;/script&gt; ga: 'UA-XXXXX-Y'就是谷歌统计的编号或： 12&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js\" data-ga=\"UA-XXXXX-Y\"&gt;&lt;/script&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/ga.min.js\"&gt;&lt;/script&gt; ga: 'UA-XXXXX-Y'=data-ga=&quot;UA-XXXXX-Y&quot; 外链脚本插件如果你需要在.md文件中引用如： 1&lt;script src=\"https://domain.com/xxx.js\" &gt;&lt;/script&gt; 安装： 1&lt;script src=&quot;//cdn.jsdelivr.net/npm/docsify/lib/plugins/external-script.min.js&quot;&gt;&lt;/script&gt; 照这样看来是可以在.md中写.html的…… 图片缩放插件1&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/zoom-image.min.js\"&gt;&lt;/script&gt; 效果就是点击一下图片可以放大如：如果不想缩放可以设置： 1![](image.png \":no-zoom\") 复制代码插件1&lt;script src=\"//cdn.jsdelivr.net/npm/docsify-copy-code\"&gt;&lt;/script&gt; 效果可以自己看上面的所有代码 Disqus评论插件123456&lt;script&gt; window.$docsify = { disqus: 'shortname' }&lt;/script&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/disqus.min.js\"&gt;&lt;/script&gt; 详见：https://disqus.com/ Gitalk评论插件123456789101112131415&lt;link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/gitalk/dist/gitalk.css\"&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/gitalk.min.js\"&gt;&lt;/script&gt;&lt;script src=\"//cdn.jsdelivr.net/npm/gitalk/dist/gitalk.min.js\"&gt;&lt;/script&gt;&lt;script&gt; var gitalk = new Gitalk({ clientID: 'Github Application Client ID', clientSecret: 'Github Application Client Secret', repo: 'Github repo', owner: 'Github repo owner', admin: ['Github repo collaborators, only these guys can initialize github issues'], // facebook-like distraction free mode distractionFreeMode: false })&lt;/script&gt; 可以使文章实现评论效果，教程详见：https://github.com/gitalk/gitalk/ 链接下一篇文章插件可以再文章底部显示“下一篇”和“上一篇”效果见https://xhemj.gitee.io/books/#/p/how-to-use-Docsify.md 1&lt;script src=\"//cdn.jsdelivr.net/npm/docsify-pagination/dist/docsify-pagination.min.js\"&gt;&lt;/script&gt; 也可以自定义： 12345678window.$docsify = {pagination: { previousText: '上一篇', nextText: '下一篇', crossChapter: true, crossChapterText: true, }, } 更多插件可以见https://docsify.js.org/#/awesome?id=plugins !&gt; 以下是我自己使用的插件 Social Share分享插件经过测试，无法直接在index.html中嵌入代码需要先安装上面的外链脚本插件 1&lt;script src=\"//cdn.jsdelivr.net/npm/docsify/lib/plugins/external-script.min.js\"&gt;&lt;/script&gt; 后在.md文件中写下： 123&lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/css/share.min.css\"&gt;&lt;div class=\"social-share\"&gt;&lt;/div&gt;&lt;script type=\"text/javascript\" src=\"https://cdnjs.cloudflare.com/ajax/libs/social-share.js/1.0.16/js/social-share.min.js\"&gt;&lt;/script&gt; 即可在文件中嵌入分享插件详细自定义教程可见：https://github.com/overtrue/share.js 嵌入Markdown文件插件1&lt;script src=\"https://unpkg.com/docsify-remote-markdown/dist/docsify-remote-markdown.min.js\"&gt; 可以自定义： 12345window.$docsify = {remoteMarkdown: { tag: 'md', }, } 使用方法： 1[你设置的tag，如：md](https://domain.com/markdown.md) 效果如上方的分享插件就可以直接链接：而不用写分享代码 1&lt;script src=\"https://unpkg.com/docsify-footer-enh/dist/docsify-footer-enh.min.js\"&gt;&lt;/script&gt; 自定义： 12345678window.$docsify = {footer: { copy: '', auth: '', pre: '&lt;hr&gt;', style:'text-align: center;' }, } 实测copy和auth可以随便写写什么文字代码都可以pre是正文和Footer的分割线，默认&lt;hr&gt;效果可以见https://xhemj.gitee.io/books/#/p/How-to-Use-Docsify.md 结尾基本上配置就是这样了！本文当基于官方文档书写要是有什么说不到位的欢迎私信我或者发邮件到xhemj2680@163.com哦！好看就分享一下吧！","link":"/2020/04/01/How-to-Use-Docsify/"},{"title":"如何免费申请js.org二级域名","text":"最近看到很多人都去申请了js.org的域名，我就来写个教程吧！（本教程只注重于申请域名，而不是如何使用Github）看看我的成品：https://xhemj.js.org/官网是这么写的： 12345Are you a JavaScript developer looking for free webspace to host your project?Check out GitHub Pages. To make things perfect we provide you with a free and sleek URL as shown in the examples above.We don't mind whether it's a User-, Organization- or Project-Page - as long as you provide some reasonable content! Just follow these four steps to get your own free JS.ORG subdomain for your GitHub Page: 您是JavaScript开发人员吗？，您是否正在寻找免费的网站空间来托管您的项目？那就看看GitHub Pages吧。为了使事情变得完美，我们为您提供了一个免费且时尚的域名，如上面的示例所示。只要您提供一些合理的内容，我们都不介意是用户页面、组织页面还是项目页面。您只需按照以下四个步骤为GitHub Pages获取自己的免费JS.ORG子域。并且js.org还有免费https证书和cdn加速是不是很心动？ 第一步：注册先去注册一个Github的账号（这边不详细说明）注册网址：Github.com注册好后在Repositories旁点击new信息随便填写（前提你能记住） 第二步：上传将你的网站(index.html)放入Github关于Git上传Github的教程欢迎参考https://gitee.com/progit/或https://www.progit.cn/之后到你自己仓库的Settings里找到GitHub Pages，选择你要部署的分区，可以看到一条 1Your site is published at https://xhemj.github.io/ 就表示部署成功了，可以访问以下确认部署正确 第三部：Fork仓库先进入https://github.com/js-org/js.org点击右上角Fork，fork仓库到你自己的仓库稍等一会儿刷新就可以看到仓库由js-org/js.org变成了USERNAME/js.org在自己的仓库里打开cnames_active.js可以看到里面有上千条别人的域名 第三部：申请现在先想好你要申请的域名如：xhemj.js.org现在浏览器中先访问以下，看看有没有被占用还好我的还在~进入cnames_active.js，修改，将你的域名按照如下格式按照首字母顺序（一定要按照字母顺序）放入相应的行数比如说我的xhemj.js.org就可以放入第2176行： 1\"xhemj\": \"xhemj.github.io/books\", 那我们来解释一下：1.&quot;xhemj&quot;表示你要申请的域名，如你要申请xhemj.js.org就填入xhemj2.: 就是一个冒号+空格3.&quot;xhemj.github.io/books&quot;表示你原来网站GithubPages的链接4.,一定要记得在后面加一个逗号！注意：在后面不要加任何注释！（非常重要）之后返回你的USERNAME/js.org，点击Pull requests，向js.org发送一个申请内容如下：标题：你要申请的域名，如：xhemj.js.org内容：会自动帮你写好，不用更改内容翻译过来就是： 12页面上有合理的内容（请参阅：无内容）我已阅读并接受条款和条件 肯定接受啊！！记得回到要申请的仓库里新建CHAME文件，在里面输入你的.js.org域名之后到https://github.com/js-org/js.org的Pull requests就可以看到你的申请如下：一个小建议：因为时差，最好在晚上12点前提交，这样审核人员刚好起床，可以进行审核之后等待过关后：就成功啦！！要是没通过，要注意的是网站不能太简单太难看，最好和js沾点边一半做博客的都可以过的没过也必要气馁，继续努力吧 结尾基本上配置就是这样了！本文当基于官网书写要是有什么说不到位的欢迎私信我或者发邮件到xhemj2680@163.com哦！好看就分享一下吧！","link":"/2020/04/28/How-to-Use-Js-org-Domain/"}],"tags":[{"name":"Docsify","slug":"Docsify","link":"/tags/Docsify/"},{"name":"网站","slug":"网站","link":"/tags/%E7%BD%91%E7%AB%99/"},{"name":"js.org","slug":"js-org","link":"/tags/js-org/"},{"name":"域名","slug":"域名","link":"/tags/%E5%9F%9F%E5%90%8D/"}],"categories":[{"name":"教程","slug":"教程","link":"/categories/%E6%95%99%E7%A8%8B/"}]}